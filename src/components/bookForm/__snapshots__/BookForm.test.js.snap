// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BookForm
    book={Object {}}
    handleDelete={[MockFunction]}
    handleSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label
          htmlFor="title"
        >
          Title
        </label>
        <input
          id="title"
          onChange={[Function]}
          type="text"
        />
        <label
          htmlFor="category"
        >
          Category
        </label>
        <input
          id="category"
          onChange={[Function]}
          type="text"
        />
        <div>
          Please select an Image for Preview
        </div>
        <input
          accept="image/*"
          id="image"
          onChange={[Function]}
          type="file"
        />
        <button
          type="submit"
        >
          Create
        </button>
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="title"
          >
            Title
          </label>,
          <input
            id="title"
            onChange={[Function]}
            type="text"
          />,
          <label
            htmlFor="category"
          >
            Category
          </label>,
          <input
            id="category"
            onChange={[Function]}
            type="text"
          />,
          <div>
            Please select an Image for Preview
          </div>,
          <input
            accept="image/*"
            id="image"
            onChange={[Function]}
            type="file"
          />,
          <button
            type="submit"
          >
            Create
          </button>,
          null,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Title",
            "htmlFor": "title",
          },
          "ref": null,
          "rendered": "Title",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "title",
            "onChange": [Function],
            "type": "text",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Category",
            "htmlFor": "category",
          },
          "ref": null,
          "rendered": "Category",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "category",
            "onChange": [Function],
            "type": "text",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Please select an Image for Preview",
          },
          "ref": null,
          "rendered": "Please select an Image for Preview",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "accept": "image/*",
            "id": "image",
            "onChange": [Function],
            "type": "file",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Create",
          "type": "button",
        },
        null,
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label
            htmlFor="title"
          >
            Title
          </label>
          <input
            id="title"
            onChange={[Function]}
            type="text"
          />
          <label
            htmlFor="category"
          >
            Category
          </label>
          <input
            id="category"
            onChange={[Function]}
            type="text"
          />
          <div>
            Please select an Image for Preview
          </div>
          <input
            accept="image/*"
            id="image"
            onChange={[Function]}
            type="file"
          />
          <button
            type="submit"
          >
            Create
          </button>
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="title"
            >
              Title
            </label>,
            <input
              id="title"
              onChange={[Function]}
              type="text"
            />,
            <label
              htmlFor="category"
            >
              Category
            </label>,
            <input
              id="category"
              onChange={[Function]}
              type="text"
            />,
            <div>
              Please select an Image for Preview
            </div>,
            <input
              accept="image/*"
              id="image"
              onChange={[Function]}
              type="file"
            />,
            <button
              type="submit"
            >
              Create
            </button>,
            null,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title",
              "htmlFor": "title",
            },
            "ref": null,
            "rendered": "Title",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "title",
              "onChange": [Function],
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Category",
              "htmlFor": "category",
            },
            "ref": null,
            "rendered": "Category",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "category",
              "onChange": [Function],
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Please select an Image for Preview",
            },
            "ref": null,
            "rendered": "Please select an Image for Preview",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "accept": "image/*",
              "id": "image",
              "onChange": [Function],
              "type": "file",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Create",
            "type": "button",
          },
          null,
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
